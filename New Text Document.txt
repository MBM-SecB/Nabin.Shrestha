using System;
using System.Linq;

namespace LINQ
{
    class Program
    {
        static void Main()

        {
            //LINQ-Language Integrated  Query

            int[] numbers = { 11, 22, 32, 13, 53, 65, 76, 34, 21, 65, 342, 33 };

//method syntax
            var result1 = numbers.Where(num => num > 50).Select(num => num);

            //query expression syntax

            var result2 = from num in numbers
                            where num>50
                            select num;



            //restrication - where    

            var result3 = from num in numbers
                            where num>50 && num < 70
                            select num;      


            //projection -select 
            var result4 = from num in numbers
                            select num*num; 


             var result5 = from num in numbers
                            where num % 2 == 0
                            select num * num;

            //ordering- orderby, orderby desending

            var result6 = from num in numbers
                           //for desending order of even number: where num % 2 == 0
                            orderby num descending
                            select num;

            //Partitioning: take 
            var result7 =  numbers.Take(5);//(take 1st 5 numbers)

            var result8 =  numbers.Skip(5).Take(5);//(skip 1st 5 numbers and take 5 number after that)

            
            var result9 = numbers.Any(num => num % 2 == 0);//(any element even)

            var result10 = numbers.All(num => num % 2 == 0);//(checks if all elements are even)

            var results11 = numbers.Contains(23);//(checks if 23 is in element)

            //  Generating:range 
            var result12 = Enumerable.Range(1,1000);//get 1 to 1000

            var result13 = Enumerable.Repeat("Hello WOrld", 20); //print hello world 20 times



        }


    void LearnLinqOnComplexCollection()
    {
        List<Country> countries = new List<Country>();

        Country c1 = new Country("Nepal","Kathmandu","Asia",3232323);
        Country c2 = new Country("India","New Delhi","Asia",3232232333,DateTime.pharse ("1947//1/1"));
        Country c3 = new Country("US","WashingtonDC","NorthAmerica",323232323);
        Country c4 = new Country("China","Beijing","Asia",2233232323, DateTime.pharse ("1999/2/3"));
        Country c5 = new Country("Nepal","Kathmandu","Asia",3232323);
        Country c6 = new Country("India","New Delhi","Asia",3232232333,DateTime.pharse ("1947//1/1"));
        Country c7 = new Country("US","WashingtonDC","NorthAmerica",323232323);
        Country c8 = new Country("China","Beijing","Asia",2233232323, DateTime.pharse ("1999/2/3"));
        Country c9 = new Country("Nepal","Kathmandu","Asia",3232323);
        Country c10 = new Country("India","New Delhi","Asia",3232232333,DateTime.pharse ("1947//1/1"));
        Country c11 = new Country("US","WashingtonDC","NorthAmerica",323232323);
        Country c12 = new Country("China","Beijing","Asia",2233232323, DateTime.pharse ("1999/2/3"));
        Country c13 = new Country("Nepal","Kathmandu","Asia",3232323);
        Country c14 = new Country("India","New Delhi","Asia",3232232333,DateTime.pharse ("1947//1/1"));
        Country c15 = new Country("US","WashingtonDC","NorthAmerica",323232323);
        Country c16 = new Country("China","Beijing","Asia",2233232323, DateTime.pharse ("1999/2/3"));
        Country c17 = new Country("Nepal","Kathmandu","Asia",3232323);
        Country c18 = new Country("India","New Delhi","Asia",3232232333,DateTime.pharse ("1947//1/1"));
        Country c19 = new Country("US","WashingtonDC","NorthAmerica",323232323);
        Country c20 = new Country("China","Beijing","Asia",2233232323, DateTime.pharse ("1999/2/3"));

        //c1.Name="Nepal";
        //c1.Capitol="Kathmandu";
        //c1.Continent ="Asia";
        //c1.Population = "3232323";

        //countries.Add(c1);

        List<Country> countries = new List<Country> {c1,c2,c3,c4};


        var resultl1 = from country in countries
                        where country.Continent == "Asia"
                        select country.Name;

        //      HW - list all asian country which are never been invaded
        //      HW - list all europian countries in assending order that has population less than 500k          

    }
    
    }
}    











sacascvsdevswevwsevwsvw






using System;
public class Country
{
    public string Name (get; set;)

    public string Capitol(get; set;)

    public string Continent (get; set;)
    
    public long Population (get; set;)

    public DateTime IndependenceDay (get; sbyte;)


    public Country (string n, string cp, string c, long p, DateTime i = default)
    {
        Name = n;
        Capitol = cp;
        Continent = c;
        Population = p;
        IndependencyDay = i;
    }



}
